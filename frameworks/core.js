!function (t, e) { var a = function () { return { Events: function (t) { var e = t + "&get=events", a = jQuery.isFunction(arguments[arguments.length - 1]) ? arguments[arguments.length - 1] : null; if (3 == arguments.length && "object" == typeof arguments[1]) { var i = arguments[1], n = []; for (var o in i) if ("string" == typeof i[o]) n[n.length] = o + "=" + encodeURIComponent(i[o]); else { for (var r = [], s = 0; s < i[o].length; s++) r[r.length] = o + "=" + encodeURIComponent(i[o][s]); n[n.length] = r.join("&") } e += "&" + n.join("&") } $.ajax({ type: "POST", url: e, dataType: "jsonp", async: !0, cache: !1 }).done(function (t, e, i) { null != a && a.apply(null, arguments) }) } } }(); t.ActiveData || (t.ActiveData = a) }(window, document), ActiveData.EventDetails = function () { return { Transform: "", RequestUrl: function (t) { var e = {}, a = ActiveData.Utility.Context(e), i = { tenant: "", site: "", get: "eventdetails", route: t, view: this.Transform }; return i.tenant = a.Tenant, i.site = a.Site, ActiveData.Variables.runtime.baseUrl + "/handlers/query.ashx?" + $.param(i) }, RenderHtml: function (t) { return $.ajax({ method: "GET", url: ActiveData.EventDetails.RequestUrl(t), dataType: "jsonp" }) } } }(), ActiveData.EventList = function () { return { Transform: "", Count: { Total: -1, Page: 0, PageSize: -1 }, RequestUrl: function () { var t = {}, e = ActiveData.Utility.Context(t), a = { tenant: "", site: "", get: "eventlist", page: this.Count.Page, pageSize: this.Count.PageSize, total: this.Count.Total, view: this.Transform }; return a.tenant = e.Tenant, a.site = e.Site, ActiveData.Variables.runtime.baseUrl + "/handlers/query.ashx?" + $.param(a) }, RenderHtml: function () { return $.ajax({ method: "GET", url: ActiveData.EventList.RequestUrl(), dataType: "jsonp" }) } } }(), ActiveData.Gadgets = function () { return { CurrentGadget: "", RegisterGadgets: function () { function t(t) { var e = {}; if ("Email" == t) e.to = $("#txtGadgetEmailAddress").val(), e.from = $("#txtGadgetEmailFrom").val(), e.name = $("#txtGadgetEmailName").val(), e.message = $("#txtGadgetEmailMessage").val(); else if ("Alert" == t) e.email = $("#txtGadgetEmailAddress").val(), e.series = $("#ddlSeriesSelection option:selected").val(), e.type = $("#ddlAlertType option:selected").val(); else if ("RemindMe" == t) e.firstname = $("#txtGadgetFirstName").val(), e.lastname = $("#txtGadgetLastName").val(), e.type = $("#core_remind_me_type input[type='radio']:checked:first").val(), e.email = $("#txtGadgetEmailAddress").val(), e.carrier = $("#ddlGadgetWirelessCarrier option:selected").val(), e.number = $("#txtGadgetWirelessNumber").val(), e.interval = $("#ddlGadgetReminderInterval option:selected").val(); else if ("Subscribe" == t) e.url = $("#core_subscription_url").text(); else if ("DetailsIcalDownload" == t) e.series = $("#ddlGadgetSeriesSelection option:selected").val(); else if ("Category" == t || "Location" == t) { i = ""; $("#core_multi_select_list input:checked").each(function () { i = i + $(this).attr("id") + "," }), e.selection = i } else if ("Custom" == t || "GlobalCustom" == t) { var a = "", i = ""; $("#core_multi_select_list input:checked").each(function () { "GlobalCustom" == t ? (i = i + $(this).attr("id") + ",", "" == a && (a = $(this).parent().attr("id"))) : (i = i + $(this).siblings("label").text() + ",", "" == a && (a = $(this).attr("id"))) }), e.selection = i, e.customfield = a } else if ("AdvancedSearch" == t) { e.startdate = $("#txtGadgetStartDate").val(), e.enddate = $("#txtGadgetEndDate").val(), e.location = $("#ddlGadgetLocation option:selected").val(), e.category = $("#ddlGadgetCategory option:selected").val(), e.proximityrange = "from city state zip" != $("#txtGadgetProximityRange").val() ? $("#txtGadgetProximityRange").val() : "", e.proximitykeywordsinput = "events near" != $("#txtGadgetProximityKeyword").val() ? $("#txtGadgetProximityKeyword").val() : "", e.proximitykeywordscoords = $("#hdnGadgetProximityKeyword").val(), e.keywords = $("#txtGadgetKeywords").val(); var n = {}; $("#core_gadget_search .core-search-custom").each(function () { var t = $(this).find("select"), e = t.attr("id"), a = t.find("option:selected").val(); n[e] = a }), e.customfields = n; var o = {}; $("#core_gadget_search .core-search-global-custom").each(function () { var t = $(this).find("select"), e = t.attr("id"), a = t.find("option:selected").val(); o[e] = a }), e.globalcustomfields = o } return e } $(document).on("click", ".gadget-link", function () { var t = $(this).attr("data-gadgetsite"); void 0 == t && (t = ActiveData.Variables.site.route), $("#adx-modal-submit .core-button-submit").attr("data-gadgetsite", t), $("#adx-modal-submit .core-button-submit").attr("data-gadgetevent", $(this).attr("data-gadgetevent")), $("#adx-modal-submit .core-button-submit").attr("data-gadgetaction", $(this).attr("data-gadgetaction")), $("#adx-modal-submit .core-button-submit").attr("data-sharetype", $(this).attr("data-sharetype")), ActiveData.Gadgets.Show({ action: $(this).attr("data-gadgetaction"), title: $(this).attr("title"), filter: { Site: t, Event: $(this).attr("data-gadgetevent"), Resize: "Y", ShareType: $(this).attr("data-sharetype") } }) }), $(document).on("click", "#adx-modal-submit .core-button-submit", function () { var e = {}; e.tenant = ActiveData.Variables.tenant.route, e.site = $(this).attr("data-gadgetsite"), e.event = $(this).attr("data-gadgetevent"), e.action = $(this).attr("data-gadgetaction"), e.type = $(this).attr("data-sharetype"), e.recaptcha = grecaptcha.getResponse(); var a = t(e.action), i = ActiveData.Variables.runtime.baseUrl + "/handlers/gadgets.ashx?" + $.param(e); $.ajax({ method: "POST", url: i, data: JSON.stringify(a), dataType: "jsonp", async: !0, cache: !1, success: function (t) { var e = "<h2>Success</h2>"; $.each(t.statusmessage, function (t, a) { e = e + "<div class='core-success'>" + a + "</div>" }), $("#adx-modal-form").html(e), $("#adx-modal-submit").css("display", "none"), $("#adx-modal-error").html("") }, error: function (t, e, a) { var i = $.parseJSON(t.responseText), n = ""; $.each(i.statusmessage, function (t, e) { n = n + "<div class='core-error'>" + e + "</div>" }), ActiveData.Gadgets.Refresh(i.stoken), $("#adx-modal-error").html(n) } }) }), $(document).on("click", ".adx-close-modal", function () { ActiveData.Gadgets.Hide() }) }, Show: function (t) { var e = $(document).scrollTop(); $("#adx-modal-scroll-position").val(e); var a = ActiveData.Utility.Context(t.filter); t.filter && (delete t.filter.Tenant, delete t.filter.tenant, delete t.filter.Site, delete t.filter.site, delete t.filter.Event, delete t.filter.event); var i = { tenant: "", site: "" }; i.tenant = a.Tenant, i.site = a.Site, i.event = a.Event, i.action = t.action, i.type = t.filter.ShareType, void 0 !== t.filter.CustomField && (i.customfield = t.filter.CustomField); var n = ActiveData.Variables.runtime.baseUrl + "/handlers/gadgets.ashx?" + $.param(i); $("#adx-modal-recaptcha").css("display", "none"), $.ajax({ method: "GET", url: n, dataType: "jsonp", async: !0, cache: !1, success: function (t) { $("#adx-modal-submit").css("display", "block"), $("#adx-modal-form").html(t.form), $("#adx-modal-error").html(""), "false" == t.recaptcha ? $("#adx-modal-recaptcha").css("display", "none") : (ActiveData.Gadgets.Refresh(t.stoken), $("#adx-modal-recaptcha").css("display", "block")), $("#gadget").addClass("adx-modal-active"), $("body").addClass("adx-modal-wrapper-active"), ActiveData.Gadgets.Resized() }, error: function (t, e, a) { $("#gadget").removeClass("adx-modal-active") } }) }, Hide: function () { var t = $("#adx-modal-scroll-position").val(), e = !1; ($(window).height() < 700 || $(".adx-modal-wrapper-active .adx-modal").hasClass("adx-modal-full-width")) && (e = !0), $(".adx-modal-wrapper-active .main").removeClass("main-hide"), $(".adx-modal-wrapper-active .adx-modal").removeClass("adx-modal-full-width"), $(".adx-modal-wrapper-active .adx-modal-inner").removeClass("adx-modal-center"), $("#gadget").removeClass("adx-modal-active"), $("body").removeClass("adx-modal-wrapper-active"), e && $("html, body").animate({ scrollTop: t }, 0) }, Loaded: function (t) { this.Resized() }, Resized: function (t) { var e = $(".adx-modal-wrapper-active .adx-modal-inner").outerHeight(), a = $(window).height(); $(window).width() >= 400 ? $(".adx-modal-wrapper-active .adx-modal").css("width", "400px") : $(".adx-modal-wrapper-active .adx-modal").css("width", "80%"), e > a ? ($(".adx-modal-wrapper-active .main").addClass("main-hide"), $(".adx-modal-wrapper-active .adx-modal").addClass("adx-modal-full-width"), $(".adx-modal-wrapper-active .adx-modal-inner").addClass("adx-modal-center")) : a < 600 && ($(".adx-modal-wrapper-active .main").removeClass("main-hide"), $(".adx-modal-wrapper-active .adx-modal").removeClass("adx-modal-full-width"), $(".adx-modal-wrapper-active .adx-modal-inner").removeClass("adx-modal-center")) }, Refresh: function (t) { if (void 0 != t && "" != t) { var e = $("#adx-modal-recaptcha iframe").attr("src"), a = $("#adx-modal-recaptcha").attr("data-stoken"), i = e.replace(a, t); $("#adx-modal-recaptcha").attr("data-stoken", t), $("#adx-modal-recaptcha iframe").attr("src", i) } else grecaptcha.reset() } } }(), ActiveData.Utility = function () { return { Context: function (t) { return t ? ActiveData.Variables ? { Tenant: void 0 != t.Tenant ? t.Tenant : ActiveData.Variables.tenant.route, Site: void 0 != t.Site ? t.Site : ActiveData.Variables.site.route, Event: void 0 != t.Event ? t.Event : ActiveData.Variables.event.route } : { Tenant: t.Tenant ? t.Tenant : "", Site: t.Site ? t.Site : "", Event: t.Event ? t.Event : "" } : { Tenant: ActiveData.Variables.tenant.route, Site: ActiveData.Variables.site.route, Event: ActiveData.Variables.event.route } }, Post: function (t, e, a) { var i = document.createElement("form"); i.setAttribute("method", e), i.setAttribute("action", t); for (var n in a) if (a.hasOwnProperty(n)) { var o = document.createElement("input"); o.setAttribute("type", "hidden"), o.setAttribute("name", n), o.setAttribute("value", a[n]), i.appendChild(o) } document.body.appendChild(i), i.submit() } } }(), ActiveData.Routes = function () { return { List: function (t, e, a) { var i = "/"; return null != e && e.length > 0 && (i += e + "/"), null != a && a.length > 0 && (i += "site/" + a + "/"), null != t && t.length > 0 && (i += "?" + t), i }, Detail: function (t, e, a, i) { var n = ActiveData.Routes.List(null, a, i); return n += "event/" + t + "/", null != e && e.length > 0 && (n += "?" + e), n }, Generic: function (t, e, a, i, n) { var o = ActiveData.Routes.List(null, i, n); return o += t + "/", null != e && e.length > 0 && (o += e + "/"), null != a && a.length > 0 && (o += "?" + a), o } } }(), ActiveData.Types = function () { return { IsIntegerFormat: function (t) { return !(!t || null == t) && /^[\d]+$/.test(t) }, IsFloatFormat: function (t) { return !(!t || null == t) && /^[\d]+(\.\d+)?$/.test(t) }, IsNumericFormat: function (t) { return !(!t || null == t) && IsFloatFormat(t.replace(/,/g, "")) }, GetInteger: function (t, e) { var a = String(t).replace(/\,/g, ""); return this.IsIntegerFormat(a) ? parseInt(a, 10) : e }, GetFloat: function (t, e) { var a = String(t).replace(/\,/g, ""); return this.IsFloatFormat(a) ? parseFloat(a) : e } } }(), ActiveData.Purchases = function () { return { Cart: { items: {}, updateCart: function (t, e, a) { if (0 != e) { var i = null; if (this.items[t.id] ? i = this.items[t.id] : (i = { productGuid: t.id, quantity: 0, donation: 0, info: [] }, this.items[t.id] = i), null != i) { if (null != t.fields) { if (i.quantity > e) { for (; i.quantity > e;) i.info.splice(i.info.length - 1, 1), i.quantity = i.info.length; return i } for (i.quantity = e, i.donation = a; i.info.length != i.quantity;) { for (var n = t.id + "_" + i.info.length, o = Builder.Form({ guid: n }), r = 0; r < t.fields.length; r++) { var s = t.fields[r], l = Builder.Field({ guid: s.guid, label: s.label, type: s.type.toLowerCase(), required: s.required }); "text" == l.type ? (l.textMode = s.textMode, ActiveData.Variables.user.isLoggedIn && ("firstname" == l.guid ? l.setValue(n, ActiveData.Variables.user.firstName) : "lastname" == l.guid ? l.setValue(n, ActiveData.Variables.user.lastName) : "emailaddress" == l.guid && l.setValue(n, ActiveData.Variables.user.email))) : "yesno" == l.type || ("singlechoice" == l.type ? l.options = s.options : "multiplechoice" == l.type && (l.options = s.options)), o.addField(l) } i.info[i.info.length] = o } } else i.quantity = e, i.donation = a; return i } } else delete this.items[t.id] }, removeCartItemInfo: function (t, e) { var a = this.items[t.id]; null != a && (a.info.splice(e, 1), a.quantity = a.info.length) }, subtotal: function () { var t = 0; for (var e in this.items) { var a = this.items[e], i = ActiveData.Purchases.Products.getProduct(e); t += parseFloat(i.cost) * a.quantity } return t }, quantity: function () { var t = 0; for (var e in this.items) t += this.items[e].quantity; return t } }, Products: { addProduct: function (t) { this.items.push(t) }, getProduct: function (t) { for (var e = 0; e < this.items.length; e++) if (this.items[e].id == t) return this.items[e]; return null }, items: [] }, Register: function (t) { var e = {}; $(".core-product-questions").each(function () { var t = $(this).attr("data-productGuid"), a = ActiveData.Purchases.Products.getProduct(t); if (ActiveData.Purchases.Cart.items[a.id]) { var i = ActiveData.Purchases.Cart.items[a.id]; if (e[a.id] = { quantity: i.quantity, donation: i.donation }, a.fields.length > 0) for (var n = 0; n < i.info.length; n++) { for (var o = i.info[n], r = [], s = 0; s < o.fields.length; s++) r[r.length] = o.fields[s].guid + "[" + o.fields[s].getValue(o.guid) + "]"; e[a.id][n] = r.join("|") } } }); var a = $.param(ActiveData.Utility.Context(null)); $.ajax({ type: "POST", url: ActiveData.Variables.runtime.baseUrl + "/handlers/hapiproducts.ashx?method=get&entity=purchase-register&callback=&" + a, data: e, dataType: "json" }).done(function (e) { e && "success" == e.status ? (e.valid, t.apply(this, arguments)) : alert("Error registering, refresh the page then try again.") }) } } }(), ActiveData.Theme = function () { return { LoginUrl: function () { return ActiveData.Routes.Generic("login", "", "", ActiveData.Variables.tenant.route, ActiveData.Variables.site.route) }, LogoutUrl: function () { return ActiveData.Routes.Generic("login", "", "signout=true", ActiveData.Variables.tenant.route, ActiveData.Variables.site.route) }, IsLoggedIn: function () { return "Y" == ActiveData.Variables.user.isLoggedIn } } }(), ActiveData.Maps = function () { var t = []; return { ParseLocation: function (e) { var a, i = $.Deferred(), n = (e.Address1 + " " + e.City + " " + e.State + " " + e.Zip).trim(), o = $.Deferred(); t.push(o); var r = function (e) { $.each(t, function () { "pending" === this.state() && this.resolve(e) }), t = [] }; return navigator.geolocation ? navigator.geolocation.getCurrentPosition(function (t) { r(t.coords.latitude + "," + t.coords.longitude) }, function (t) { r("") }) : o.resolve(""), o.done(function (t) { var o = "https://www.google.com/maps/dir/", r = '<div class="">' + e.Name + "<br/>" + e.Address1 + "<br/>" + e.City + " " + e.State + " " + e.Zip; 0 == n.length ? 0 == e.Latitude && 0 == e.Longitude || (r = r + '<br/><a target="_blank" href="' + o + t + "/" + e.Latitude + "," + e.Longitude + '">Get Directions</a></div>') : r = r + '<br/><a target="_blank" href="' + o + t + "/" + e.Address1 + " " + e.City + " " + e.State + " " + e.Zip + '">Get Directions</a></div>', a = { source: e, literal: n, coords: { lat: parseFloat(e.Latitude), lng: parseFloat(e.Longitude) }, html: r }, i.resolve(a) }), i.promise() }, Show: function (t) { void 0 !== ActiveData.Variables.site.mapboxApiKey && ActiveData.Variables.site.mapboxApiKey.length > 0 ? ActiveData.Maps.Mapbox.Show(t) : void 0 !== ActiveData.Variables.site.googleApiKey && ActiveData.Variables.site.googleApiKey.length > 0 && ActiveData.Maps.Google.Show(t) }, Refresh: function (t) { void 0 !== ActiveData.Variables.site.mapboxApiKey && ActiveData.Variables.site.mapboxApiKey.length > 0 ? ActiveData.Maps.Mapbox.Refresh() : void 0 !== ActiveData.Variables.site.googleApiKey && ActiveData.Variables.site.googleApiKey.length > 0 && ActiveData.Maps.Google.Refresh() } } }(), ActiveData.Maps.Google = function () { function t(t, e) { if (0 != t.coords.lat || 0 != t.coords.lng) a = new google.maps.LatLng(t.coords.lat, t.coords.lng); else var a = new google.maps.LatLng(e[0].geometry.location.lat(), e[0].geometry.location.lng()); var i = new google.maps.Marker({ map: ActiveData.Maps.Google.Canvas, position: a, title: t.source.Name }); ActiveData.Maps.Google.Bounds.extend(i.position); var n = new google.maps.InfoWindow({ content: t.html, disableAutoPan: !1 }); i.setMap(ActiveData.Maps.Google.Canvas), ActiveData.Maps.Google.Refresh(), google.maps.event.addListener(i, "click", function () { n.open(ActiveData.Maps.Google.Canvas, i) }), null == ActiveData.Maps.Google.Marker && (ActiveData.Maps.Google.Marker = i), n.open(ActiveData.Maps.Google.Canvas, i) } return { Show: function (e) { var a = new google.maps.Geocoder, i = { zoom: 14, mapTypeId: google.maps.MapTypeId.ROADMAP }; this.Canvas = new google.maps.Map(e.canvas, i), this.Bounds = new google.maps.LatLngBounds, this.MarkerCount = e.address.length, $.each(e.address, function (e, i) { ActiveData.Maps.ParseLocation(i).done(function (e) { 0 != e.coords.lat || 0 != e.coords.lng ? a.geocode({ location: e.coords }, function (a, i) { i == google.maps.GeocoderStatus.OK && t(e, a) }) : a.geocode({ address: e.literal }, function (a, i) { i == google.maps.GeocoderStatus.OK && t(e, a) }) }) }) }, Refresh: function () { null != this.Canvas && (google.maps.event.trigger(this.Canvas, "resize"), this.Canvas.setCenter(this.Bounds.getCenter()), this.MarkerCount > 1 && this.Canvas.fitBounds(this.Bounds)) }, Canvas: null, Bounds: null, Marker: null, MarkerCount: null } }(), ActiveData.Maps.Mapbox = function () { return { Show: function (t) { L.mapbox.accessToken = ActiveData.Variables.site.mapboxApiKey; var e = L.mapbox.geocoder("mapbox.places"); this.Canvas = L.mapbox.map(t.canvas.id, "mapbox.streets"), this.Bounds = new L.LatLngBounds, this.MarkerCount = t.address.length, $.each(t.address, function (t, a) { ActiveData.Maps.ParseLocation(a).done(function (a) { e.query(a.literal, function (e, i) { var n = []; if (0 != a.coords.lat || 0 != a.coords.lng ? n = [a.coords.lat, a.coords.lng] : void 0 !== i.latlng && null == e && (n = i.latlng), n.length > 0) { var o = L.marker(n); o.bindPopup(a.html), o.addTo(ActiveData.Maps.Mapbox.Canvas), ActiveData.Maps.Mapbox.Bounds.extend(n), ActiveData.Maps.Mapbox.Canvas.fitBounds(ActiveData.Maps.Mapbox.Bounds), 0 == t && (ActiveData.Maps.Mapbox.Marker = o, ActiveData.Maps.Mapbox.Marker.openPopup(), ActiveData.Maps.Mapbox.Canvas.setZoom(14)) } }) }) }) }, Refresh: function () { null != this.Canvas && (this.Canvas.invalidateSize(), this.MarkerCount > 1 ? this.Canvas.fitBounds(this.Bounds) : this.Canvas.setZoom(14), null != this.Marker && this.Marker.openPopup()) }, Canvas: null, Bounds: null, Marker: null, MarkerCount: null } }(), function (t, e) { var a = function () { return { Get: function (t) { var e = { tenant: "", site: "", id: "" }; t.filter.View && (e.view = t.filter.View), t.filter.Highlighted && (e.highlighted = t.filter.Highlighted), t.filter.SharingGuid && (e.id = t.filter.SharingGuid), t.filter.Id && (e.id = t.filter.Id), ActiveData.Variables ? (e.tenant = ActiveData.Variables.tenant.route, e.site = ActiveData.Variables.site.route) : (t.filter.Tenant && (e.tenant = t.filter.Tenant), t.filter.Site && (e.site = t.filter.Site)); var a = (t.url ? t.url : ActiveData.Variables.runtime.baseUrl + "/handlers/") + "query.ashx"; ActiveData.Events(a + "?" + $.param(e), t.success) } } }(); t.ADX || (t.ADX = a) }(window, document);